stages:
  - version-up
  - build
  - quality
  - quality-gate
  - deploy

cache: &global_cache
  key: $CI_COMMIT_REF_SLUG
  paths:
    - node_modules/
    - /root/.npm/

version-up:
  image: node:12-alpine3.13
  stage: version-up
  before_script:
    -  apk update && apk upgrade && apk add --no-cache bash git openssh
    - git remote set-url origin https://${GITLAB_CI_USERNAME}:${GITLAB_CI_TOKEN}@gitlab.com/jobs-victor/bff-login.git
    - git config --global user.email ${GITLAB_CI_USERNAME}
    - git config --global user.name 'GITLAB CI'
  script:
    - git checkout master
    - VERSION=$(npm version patch)
    - cd client && npm version patch
    - cd ../server && npm version patch
    - git add .
    - git commit -m '[skip ci] version up'
    - git push origin master

build:
  image: node:12-alpine3.13
  stage: build
  cache:
    <<: *global_cache
  script:
    - npm run install:all
    - npm run build:prod
  artifacts:
    paths:
      - ./server/dist
      - ./server/package.json
    expire_in: 1 day

lint:
  image: node:12-alpine3.13
  stage: quality
  cache:
    <<: *global_cache
  script:
    - npm run install:all
    - npm run lint

unit-test:
  stage: quality
  image: node:12-alpine3.13
  cache:
    <<: *global_cache
  script:
    - npm run install:all
    - npm run test:unit:ci
  artifacts:
    reports:
      junit:
        - ./server/junit.xml
        - ./client/junit.xml
    paths:
      - ./.ci/
    expire_in: 1 day

component-test:
  stage: quality
  image: node:12-alpine3.13
  cache:
    <<: *global_cache
  before_script:
    - export CHROME_BIN="/usr/bin/chromium-browser"
    - export PUPPETEER_SKIP_CHROMIUM_DOWNLOAD="true"
    - apk update && apk upgrade
    - apk add --no-cache udev ttf-freefont chromium 
    - apk --update add redis
  script:
    - npm run install:all
    - cd tests/component
    - sh run.sh

quality_gate_test_unit:
  stage: quality-gate
  image: alpine
  before_script:
    - export COVERAGE_MIN=90
    - apk add jq
  script: 
    - sh devops/quality_gate.sh

deploy_dev:
  stage: deploy
  image: ruby:latest
  script:
    - mkdir devops/deploy
    - cp -R server/dist devops/deploy
    - cp -R views devops/deploy
    - cp server/package.json devops/deploy
    - cd devops
    - apt-get update -qy
    - apt-get install -y ruby-dev
    - gem install dpl
    - dpl --provider=heroku --app=bff-login-dev --api-key=$HEROKU_API_KEY