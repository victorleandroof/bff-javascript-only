stages:
  - version-up
  - build
  - quality
  - deploy

cache: &global_cache
  key: $CI_COMMIT_REF_SLUG
  paths:
    - node_modules/
    - /root/.npm/

version-up:
  image: node:12-alpine3.13
  stage: version-up
  before_script:
    -  apk update && apk upgrade && apk add --no-cache bash git openssh
    - git remote set-url origin https://${GITLAB_CI_USERNAME}:${GITLAB_CI_TOKEN}@gitlab.com/jobs-victor/bff-login.git
    - git config --global user.email ${GITLAB_CI_USERNAME}
    - git config --global user.name 'GITLAB CI'
  script:
    - git checkout master
    - VERSION=$(npm version patch)
    - cd client && npm version patch
    - cd ../server && npm version patch
    - git add .
    - git commit -m '[skip ci] version up'
    - git push origin master

build:
  image: node:12-alpine3.13
  stage: build
  cache:
    <<: *global_cache
  script:
    - npm run install:all
    - npm run build:prod
  artifacts:
    paths:
      - ./server/dist
      - ./server/package.json
    expire_in: 1 day

lint:
  image: node:12-alpine3.13
  stage: quality
  cache:
    <<: *global_cache
  script:
    - npm run install:all
    - npm run lint

unit-test:
  stage: quality
  image: node:12-alpine3.13
  cache:
    <<: *global_cache
  script:
    - npm run install:all
    - npm run test:unit
  artifacts:
    paths:
      - ./.ci/
    expire_in: 1 day

component-test:
  stage: quality
  image: alekzonder/puppeteer:latest
  cache:
    <<: *global_cache
  before_script:
    - apt install redis-server
  script:
    - npm run install:all
    - cd tests/component
    - sh run.sh
